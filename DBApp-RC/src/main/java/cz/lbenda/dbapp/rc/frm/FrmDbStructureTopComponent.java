/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.lbenda.dbapp.rc.frm;

import cz.lbenda.dbapp.rc.db.DbStructureReader;
import cz.lbenda.dbapp.rc.db.DbStructureReader.TableDescription;
import cz.lbenda.dbapp.rc.db.JDBCConfiguration;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//cz.lbenda.applicationdb.rc.frm//FrmDbStructure//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "FrmDbStructureTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "cz.lbenda.applicationdb.rc.frm.FrmDbStructureTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_FrmDbStructureAction",
        preferredID = "FrmDbStructureTopComponent"
)
@Messages({
  "CTL_FrmDbStructureAction=Struktura",
  "CTL_FrmDbStructureTopComponent=Struktura",
  "HINT_FrmDbStructureTopComponent=Struktura datab√°ze"
})
public final class FrmDbStructureTopComponent extends TopComponent {

  public FrmDbStructureTopComponent() {
    initComponents();
    setName(Bundle.CTL_FrmDbStructureTopComponent());
    setToolTipText(Bundle.HINT_FrmDbStructureTopComponent());

  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jTree1 = new javax.swing.JTree();

    javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
    jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
    jScrollPane1.setViewportView(jTree1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTree jTree1;
  // End of variables declaration//GEN-END:variables
  @Override
  public void componentOpened() {
    DbStructureReader reader = DbStructureReader.getInstance();
    reader.changeJDBCConfiguration(new JDBCConfiguration());

    DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode("Root Node");
    TreeModel model = new DefaultTreeModel(rootNode);

    String catalog = null, schema = null, tableType = null;
    DefaultMutableTreeNode catalogNode = null;
    DefaultMutableTreeNode schemaNode = null;
    DefaultMutableTreeNode tableTypeNode = null;
    for (TableDescription tableDescription : reader.getStructure()) {
      if (!tableDescription.getCatalog().equals(catalog)) {
        catalogNode = new DefaultMutableTreeNode(tableDescription.getCatalog());
        catalog = tableDescription.getCatalog();
        rootNode.add(catalogNode);
        schema = null;
      }
      if (!tableDescription.getSchema().equals(schema)) {
        schemaNode = new DefaultMutableTreeNode(tableDescription.getSchema());
        schema = tableDescription.getSchema();
        catalogNode.add(schemaNode);
        tableType = null;
      }
      if (!tableDescription.getTableType().equals(tableType)) {
        tableTypeNode = new DefaultMutableTreeNode(tableDescription.getTableType());
        tableType = tableDescription.getTableType();
        schemaNode.add(tableTypeNode);
      }
      tableTypeNode.add(new DefaultMutableTreeNode(tableDescription));
    }

    jTree1.setModel(model);
    jTree1.setRootVisible(false);

    MouseListener ml = new MouseAdapter() {
      @Override
      public void mousePressed(MouseEvent e) {
        int selRow = jTree1.getRowForLocation(e.getX(), e.getY());
        TreePath selPath = jTree1.getPathForLocation(e.getX(), e.getY());
        if(selRow != -1) {
            if(e.getClickCount() == 1) {
                // mySingleClick(selRow, selPath);
            }
            else if(e.getClickCount() == 2) {
              DefaultMutableTreeNode nod = (DefaultMutableTreeNode) selPath.getLastPathComponent();
              if (TableDescription.class.equals(nod.getUserObject().getClass())) {
                selectTable((TableDescription) nod.getUserObject());
              }
            }
        }
    }};
    jTree1.addMouseListener(ml);

    // TODO add custom code on component opening
  }

  @Override
  public void componentClosed() {
    // TODO add custom code on component closing
  }

  public void selectTable(TableDescription td) {
    ChosenTable.getInstance().setTableDescription(td);
  }

  void writeProperties(java.util.Properties p) {
    // better to version settings since initial version as advocated at
    // http://wiki.apidesign.org/wiki/PropertyFiles
    p.setProperty("version", "1.0");
    // TODO store your settings
  }

  void readProperties(java.util.Properties p) {
    String version = p.getProperty("version");
    // TODO read your settings according to their version
  }
}
