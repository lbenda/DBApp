/*
 * Copyright 2014 Lukas Benda <lbenda at lbenda.cz>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package cz.lbenda.dbapp.rc.frm;

import cz.lbenda.dbapp.rc.SessionConfiguration;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.DefaultListModel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//cz.lbenda.dbapp.rc.frm//FrmDbSessionChooser//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "FrmDbSessionChooserTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "leftSlidingSide", openAtStartup = true)
@ActionID(category = "Window", id = "cz.lbenda.dbapp.rc.frm.FrmDbSessionChooserTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_FrmDbSessionChooserAction",
        preferredID = "FrmDbSessionChooserTopComponent"
)
@Messages({
  "CTL_FrmDbSessionChooserAction=Výběr sezení",
  "CTL_FrmDbSessionChooserTopComponent=Výběr sezení",
  "HINT_FrmDbSessionChooserTopComponent=Výběr sezení - konfigurace přístupu k databízi"
})
public final class FrmDbSessionChooserTopComponent extends TopComponent implements ChosenTable.ConfigurationUpdateListener {

  private static final Logger LOG = LoggerFactory.getLogger(FrmDbSessionChooserTopComponent.class);

  public FrmDbSessionChooserTopComponent() {
    initComponents();
    setName(Bundle.CTL_FrmDbSessionChooserTopComponent());
    setToolTipText(Bundle.HINT_FrmDbSessionChooserTopComponent());

    listSessions.addMouseListener(new MouseAdapter() {
      @Override
      public void mousePressed(MouseEvent e) {
        if (e.getClickCount() == 2) {
          chooseSession();
        }
      }
    });
  }

  /** Method which choose session which is selected as session which is used */
  private void chooseSession() {
    SessionConfiguration sc = SessionConfiguration.getConfiguration(String.valueOf(listSessions.getSelectedValue()));
    sc.reloadStructure();
    ChosenTable.getInstance().changeSessionConfiguration(sc);
    TopComponent tc = WindowManager.getDefault().findTopComponent(FrmDbStructureTopComponent.class.getSimpleName());
    if (tc != null) {
      tc.requestActive();
      tc.requestFocus();
    }
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    listSessions = new javax.swing.JList<>();

    jScrollPane1.setViewportView(listSessions);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JList<String> listSessions;

  private DefaultListModel<String> dlm;

  // End of variables declaration//GEN-END:variables
  @Override
  public void componentOpened() {
    ChosenTable.getInstance().addConfigurationUpdateListener(this);
    dlm = new DefaultListModel<>();
    listSessions.setModel(dlm);
    configurationChanged();
  }

  @Override
  public void componentClosed() {
    // TODO add custom code on component closing
  }

  void writeProperties(java.util.Properties p) {
    // better to version settings since initial version as advocated at
    // http://wiki.apidesign.org/wiki/PropertyFiles
    // p.setProperty("version", "1.0");
    // TODO store your settings
  }

  void readProperties(java.util.Properties p) {
    // String version = p.getProperty("version");
    // TODO read your settings according to their version
  }

  @Override
  public void configurationChanged() {
    dlm.clear();
    for (String name : SessionConfiguration.getConfigurationIDs()) { dlm.addElement(name); }
  }
}
