<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2015 Lukas Benda <lbenda at lbenda.cz>.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<xsd:schema version="1.0"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:exc="http://www.lbenda.cz/dataman/schema/ExConf"
            targetNamespace="http://www.lbenda.cz/dataman/schema/ExConf"
            elementFormDefault="qualified">

  <xsd:element name="exConf" type="exc:exConfType"/>

  <xsd:complexType name="exConfType">
    <xsd:annotation><xsd:documentation>Extended configuration</xsd:documentation></xsd:annotation>
    <xsd:sequence>
      <xsd:element name="schemas" type="exc:schemasType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="tableOfKeySQLs" type="exc:tableOfKeySQLsType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="tables" type="exc:tablesType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="exports" type="exc:exportsType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
    <xsd:attribute name="src" type="xsd:anyURI">
      <xsd:annotation><xsd:documentation>External source where is structure saved. The form can be
        db://schema.table or Apache commons VFS 2.</xsd:documentation></xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="schemasType">
    <xsd:sequence>
      <xsd:element name="schema" type="exc:schemaType" minOccurs="1" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>DB schema which will be show</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="tableOfKeySQLsType">
    <xsd:sequence>
      <xsd:element name="tableOfKeySQL" type="exc:tableOfKeySQLType" minOccurs="1" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Prepared SQL commands</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="tablesType">
    <xsd:sequence>
      <xsd:element name="table" type="exc:tableType" minOccurs="1" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Extended configuration of table</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="schemaType">
    <xsd:annotation><xsd:documentation>DB schema description</xsd:documentation></xsd:annotation>
    <xsd:sequence>
      <xsd:element name="audit" type="exc:auditType" minOccurs="0" maxOccurs="1">
        <xsd:annotation><xsd:documentation>Configuration of schema/table audit</xsd:documentation></xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="catalog" type="xsd:string" use="required">
      <xsd:annotation><xsd:documentation>Name of catalog where is schema</xsd:documentation></xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="schema" type="xsd:string" use="required">
      <xsd:annotation><xsd:documentation>Name of schema</xsd:documentation></xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="auditType">
    <xsd:annotation><xsd:documentation>Configuration of audit of schema/table</xsd:documentation></xsd:annotation>
    <xsd:sequence>
      <xsd:element name="targetLogTable" type="exc:dbTableType" minOccurs="0" maxOccurs="1">
        <xsd:annotation><xsd:documentation>Table where is log writen.</xsd:documentation></xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="exc:auditTypeType" use="required">
      <xsd:annotation><xsd:documentation>Type of auditing</xsd:documentation></xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:simpleType name="auditTypeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="none">
        <xsd:annotation><xsd:documentation>The auditing is switch off for schema/table</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="sqlLogToLog">
        <xsd:annotation><xsd:documentation>Write SQL log into the log with slf4j.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="sqlLogToTable">
        <xsd:annotation><xsd:documentation>Audit is write as SQL log to specific DB table.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="tableOfKeySQLType">
    <xsd:annotation><xsd:documentation>Predefined SQL command for getting oldValues from table of keys. The SQL is value of tag</xsd:documentation></xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="id" type="xsd:ID" use="required">
          <xsd:annotation><xsd:documentation>Identifier of SQL command</xsd:documentation></xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="dbTableType">
    <xsd:annotation>
      <xsd:documentation>Database table type</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="exc:schemaType">
        <xsd:attribute name="table" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Name of extended table</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="tableType">
    <xsd:annotation>
      <xsd:documentation>Extended configuration of table</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="exc:dbTableType">
        <xsd:sequence>
          <xsd:element name="comboBox" type="exc:comboBoxType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="comboBoxType">
    <xsd:annotation>
      <xsd:documentation>Configuration of combo box inside table field.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="reloadOn" type="exc:dbTableType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>When table identify by this element is changed, then combo box is reloaded.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="column" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Target column of table where is combo box showed</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="tableOfKeySQL" type="xsd:IDREF" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifier of SQL which is used for load data for enumeration.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="column_value" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of column which hold value which is insert to database</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="column_choice" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Name of column which hold value which is show to user</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="column_tooltip" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Name of column which hold value which can be show as tooltip</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="exportsType">
    <xsd:sequence>
      <xsd:element name="export" type="exc:exportType" minOccurs="1" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Configuration of export</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="exportType">
    <xsd:annotation>
      <xsd:documentation>Configuration of export which transform data</xsd:documentation>
    </xsd:annotation>
    <!--
    <xsd:sequence>
    </xsd:sequence>
    -->
    <xsd:attribute name="id" type="xsd:ID" use="required">
      <xsd:annotation><xsd:documentation>Identification for export</xsd:documentation></xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="type" type="exc:exportTypeType" use="required">
      <xsd:annotation><xsd:documentation>Type of export</xsd:documentation></xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="file" type="xsd:string">
      <xsd:annotation><xsd:documentation>File to which is write export - if isn't filed then is user asked to select file. System use apache common vfs2 so you can use prefix like ftp:// etc.</xsd:documentation></xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="noReplace" type="xsd:boolean">
      <xsd:annotation><xsd:documentation>No replace file and crate new file with Index suffix. Or replace. If isn't set then it mean replace file.</xsd:documentation></xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:simpleType name="exportTypeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CSV">
        <xsd:annotation><xsd:documentation>Export to CSV file - CSV</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="XLSX">
        <xsd:annotation><xsd:documentation>Export to excel - XLSX.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="XLS">
        <xsd:annotation><xsd:documentation>Export to excel - XLS.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="ODS">
        <xsd:annotation><xsd:documentation>Export to open document format spreadsheet - ODS.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="TXT">
        <xsd:annotation><xsd:documentation>Export to fixed size column type file - TXT.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="XML">
        <xsd:annotation><xsd:documentation>Export to XML file - XML.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="XSLT">
        <xsd:annotation><xsd:documentation>Export to XML which is transformed with XSLT.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="VELOCITY">
        <xsd:annotation><xsd:documentation>Export and transform with VELOCITY.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FREEMARKER">
        <xsd:annotation><xsd:documentation>Export and transform with FREEMARKER.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="THYMELEAF">
        <xsd:annotation><xsd:documentation>Export and transform with THYMELEAF.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SQL">
        <xsd:annotation><xsd:documentation>Export data as SQL inserts - SQL.</xsd:documentation></xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>

</xsd:schema>
